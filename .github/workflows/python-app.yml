name: Python CI/CD with Ruff, Coverage, and Commitlint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # 任务一：代码质量检查 (Linting, Formatting, Type Checking)
  lint_and_format:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements-dev.txt

      - name: Lint with Ruff
        run: ruff check .

      - name: Check formatting with Ruff
        run: ruff format --check .

      - name: Type checking with MyPy
        run: mypy .

  # 任务二：测试与代码覆盖率
  test:
    name: Unit Tests & Coverage
    needs: lint_and_format
    runs-on: ubuntu-latest
    # 移除了 strategy 部分，现在只在一个环境中运行

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11 # 直接指定 Python 版本
        uses: actions/setup-python@v4
        with:
          python-version: "3.11" # 硬编码为 3.11
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Run tests with coverage
        run: pytest --cov=py_calculator --cov-report=xml --cov-fail-under=80 tests/

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml

  # 任务三：Commit Message 规范检查
  commit_lint:
    name: Commit Message Lint
    # 这个任务只在 Pull Request 事件中运行
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # 需要拉取所有历史记录，以便 linter 可以检查 PR 中的所有 commit
          fetch-depth: 0
      
      - name: Lint Commit Messages
        uses: wagoid/commitlint-github-action@v5

  # 任务四：打包
  build:
    name: Build Package
    # 依赖于测试任务的成功
    needs: test
    # 只在推送到 main 分支时运行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: python -m pip install build

      - name: Build package
        run: python -m build

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: ./dist
