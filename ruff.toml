# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black
# line-length = 88
# indent-width = 4
line-length = 88
indent-width = 2

# Enable unstable features
preview = true

# Assume Python 3.11
target-version = "py311"


[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "A",  # prevent using keywords that clobber python builtins
    "B",  # bugbear: security warnings
    "E",  # pycodestyle
    "F",  # Pyflakes
    "ISC",  # implicit string concatenation
    "UP",  # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules
    "W191",  # Tab used for indentation (when spaces are expected)
]
ignore = [
    "E111",  # indentation-with-invalid-multiple
    "E114",  # indentation-with-invalid-multiple-comment
]

# Allow fix for all enable rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = [
    "PIE794",  # duplicate class field names - the fix is to delete one entry, which is unlikely to be the correct fix.
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[lint.per-file-ignores]
# Also ignore `E402` in all `__init__.py` files.
"__init__.py" = ["E402"] 

[lint.flake8-quotes]
docstring-quotes = "double"


[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
# line-ending = "auto"
line-ending = "lf"  # Line ending will be covered to \n. The default line ending on Unix.

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and docsets are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is 
# enabled.
docstring-code-line-length = "dynamic"

